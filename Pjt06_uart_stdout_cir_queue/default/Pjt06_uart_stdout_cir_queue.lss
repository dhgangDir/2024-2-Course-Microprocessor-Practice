
Pjt06_uart_stdout_cir_queue.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000032  00800200  000009bc  00000a50  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009bc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000004c  00800232  00800232  00000a82  2**0
                  ALLOC
  3 .stab         00000c9c  00000000  00000000  00000a84  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000001b6  00000000  00000000  00001720  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001a0  00000000  00000000  000018d8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001275  00000000  00000000  00001a78  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000083c  00000000  00000000  00002ced  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b77  00000000  00000000  00003529  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002f0  00000000  00000000  000040a0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003ae  00000000  00000000  00004390  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a9e  00000000  00000000  0000473e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  000051dc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
   8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
   c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  10:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  14:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  18:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  1c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  20:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  24:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  28:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  2c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  30:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  34:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  38:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  3c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  40:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  44:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  48:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  4c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  50:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  54:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  58:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  5c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  60:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  64:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  68:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  6c:	0c 94 1b 01 	jmp	0x236	; 0x236 <__vector_27>
  70:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  74:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  78:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  7c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  80:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  84:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  88:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  8c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  90:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  94:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  98:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  9c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  a0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  a4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  a8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  ac:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  b0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  b4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  b8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  bc:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  c0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  c4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  c8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  cc:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  d0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  d4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  d8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  dc:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  e0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ec eb       	ldi	r30, 0xBC	; 188
  fc:	f9 e0       	ldi	r31, 0x09	; 9
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a2 33       	cpi	r26, 0x32	; 50
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>
 10e:	1b be       	out	0x3b, r1	; 59

00000110 <__do_clear_bss>:
 110:	12 e0       	ldi	r17, 0x02	; 2
 112:	a2 e3       	ldi	r26, 0x32	; 50
 114:	b2 e0       	ldi	r27, 0x02	; 2
 116:	01 c0       	rjmp	.+2      	; 0x11a <.do_clear_bss_start>

00000118 <.do_clear_bss_loop>:
 118:	1d 92       	st	X+, r1

0000011a <.do_clear_bss_start>:
 11a:	ae 37       	cpi	r26, 0x7E	; 126
 11c:	b1 07       	cpc	r27, r17
 11e:	e1 f7       	brne	.-8      	; 0x118 <.do_clear_bss_loop>
 120:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <main>
 124:	0c 94 dc 04 	jmp	0x9b8	; 0x9b8 <_exit>

00000128 <__bad_interrupt>:
 128:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012c <led_init>:
#include "led.h"

static uint8_t Leds;

void led_init(void) {
    DDRL = PORTL = 0xff;
 12c:	8f ef       	ldi	r24, 0xFF	; 255
 12e:	80 93 0b 01 	sts	0x010B, r24
 132:	80 93 0a 01 	sts	0x010A, r24
} 
 136:	08 95       	ret

00000138 <led_on_all>:
void led_on_all(void) {
    Leds = PORTL = 0x00;
 138:	10 92 0b 01 	sts	0x010B, r1
 13c:	10 92 32 02 	sts	0x0232, r1
}
 140:	08 95       	ret

00000142 <led_off_all>:
void led_off_all(void) {
    Leds = PORTL = 0xff;
 142:	8f ef       	ldi	r24, 0xFF	; 255
 144:	80 93 0b 01 	sts	0x010B, r24
 148:	80 93 32 02 	sts	0x0232, r24
}
 14c:	08 95       	ret

0000014e <led_on>:
void led_on(uint8_t led_no) {
    Leds &= ~(1 << led_no);
 14e:	21 e0       	ldi	r18, 0x01	; 1
 150:	30 e0       	ldi	r19, 0x00	; 0
 152:	02 c0       	rjmp	.+4      	; 0x158 <led_on+0xa>
 154:	22 0f       	add	r18, r18
 156:	33 1f       	adc	r19, r19
 158:	8a 95       	dec	r24
 15a:	e2 f7       	brpl	.-8      	; 0x154 <led_on+0x6>
 15c:	20 95       	com	r18
 15e:	80 91 32 02 	lds	r24, 0x0232
 162:	28 23       	and	r18, r24
 164:	20 93 32 02 	sts	0x0232, r18
	PORTL = Leds;
 168:	20 93 0b 01 	sts	0x010B, r18
}
 16c:	08 95       	ret

0000016e <led_off>:
void led_off(uint8_t led_no) {
	Leds |= (1 << led_no);
 16e:	21 e0       	ldi	r18, 0x01	; 1
 170:	30 e0       	ldi	r19, 0x00	; 0
 172:	02 c0       	rjmp	.+4      	; 0x178 <led_off+0xa>
 174:	22 0f       	add	r18, r18
 176:	33 1f       	adc	r19, r19
 178:	8a 95       	dec	r24
 17a:	e2 f7       	brpl	.-8      	; 0x174 <led_off+0x6>
 17c:	80 91 32 02 	lds	r24, 0x0232
 180:	82 2b       	or	r24, r18
 182:	80 93 32 02 	sts	0x0232, r24
	PORTL = Leds;
 186:	80 93 0b 01 	sts	0x010B, r24
}
 18a:	08 95       	ret

0000018c <led_set>:
void led_set(uint8_t led_mask) {
    Leds = ~led_mask;
 18c:	80 95       	com	r24
 18e:	80 93 32 02 	sts	0x0232, r24
	PORTL = Leds;
 192:	80 93 0b 01 	sts	0x010B, r24
}
 196:	08 95       	ret

00000198 <uart_putchar>:
	sbi(UCSR0A, U2X0);
	sbi(UCSR0B, TXEN0);
	sbi(UCSR0B, TXCIE0);
}

int uart_putchar(char ch, FILE *stream){
 198:	cf 93       	push	r28
 19a:	c8 2f       	mov	r28, r24
    if(ch == '\n') 
 19c:	8a 30       	cpi	r24, 0x0A	; 10
 19e:	19 f4       	brne	.+6      	; 0x1a6 <uart_putchar+0xe>
	    uart_putchar('\r', stream);
 1a0:	8d e0       	ldi	r24, 0x0D	; 13
 1a2:	0e 94 cc 00 	call	0x198	; 0x198 <uart_putchar>

	cli();
 1a6:	f8 94       	cli
	
	if(!uart_busy) {
 1a8:	80 91 33 02 	lds	r24, 0x0233
 1ac:	88 23       	and	r24, r24
 1ae:	59 f4       	brne	.+22     	; 0x1c6 <uart_putchar+0x2e>
	    UDR0 = ch;
 1b0:	c0 93 c6 00 	sts	0x00C6, r28
		uart_busy = 1;
 1b4:	81 e0       	ldi	r24, 0x01	; 1
 1b6:	80 93 33 02 	sts	0x0233, r24
 1ba:	0a c0       	rjmp	.+20     	; 0x1d0 <uart_putchar+0x38>
	} else {
		while(q_insert(ch) == 0) {
		    sei();
 1bc:	78 94       	sei
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1be:	86 ef       	ldi	r24, 0xF6	; 246
 1c0:	8a 95       	dec	r24
 1c2:	f1 f7       	brne	.-4      	; 0x1c0 <uart_putchar+0x28>
			_delay_us(100);
			cli();
 1c4:	f8 94       	cli
	
	if(!uart_busy) {
	    UDR0 = ch;
		uart_busy = 1;
	} else {
		while(q_insert(ch) == 0) {
 1c6:	8c 2f       	mov	r24, r28
 1c8:	0e 94 53 01 	call	0x2a6	; 0x2a6 <q_insert>
 1cc:	00 97       	sbiw	r24, 0x00	; 0
 1ce:	b1 f3       	breq	.-20     	; 0x1bc <uart_putchar+0x24>
		    sei();
			_delay_us(100);
			cli();
		}
	}
	sei();
 1d0:	78 94       	sei
	return (1);
}
 1d2:	81 e0       	ldi	r24, 0x01	; 1
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	cf 91       	pop	r28
 1d8:	08 95       	ret

000001da <uart_init>:

FILE Mystdout = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);
char uart_busy;

void uart_init() {
	stdout = &Mystdout;
 1da:	80 e0       	ldi	r24, 0x00	; 0
 1dc:	92 e0       	ldi	r25, 0x02	; 2
 1de:	90 93 7b 02 	sts	0x027B, r25
 1e2:	80 93 7a 02 	sts	0x027A, r24
	uart_busy = 0;
 1e6:	10 92 33 02 	sts	0x0233, r1
	q_init();
 1ea:	0e 94 4a 01 	call	0x294	; 0x294 <q_init>
    UBRR0H = 0x00; UBRR0L = 0x07;
 1ee:	10 92 c5 00 	sts	0x00C5, r1
 1f2:	87 e0       	ldi	r24, 0x07	; 7
 1f4:	80 93 c4 00 	sts	0x00C4, r24
	sbi(UCSR0A, U2X0);
 1f8:	e0 ec       	ldi	r30, 0xC0	; 192
 1fa:	f0 e0       	ldi	r31, 0x00	; 0
 1fc:	80 81       	ld	r24, Z
 1fe:	82 60       	ori	r24, 0x02	; 2
 200:	80 83       	st	Z, r24
	sbi(UCSR0B, TXEN0);
 202:	e1 ec       	ldi	r30, 0xC1	; 193
 204:	f0 e0       	ldi	r31, 0x00	; 0
 206:	80 81       	ld	r24, Z
 208:	88 60       	ori	r24, 0x08	; 8
 20a:	80 83       	st	Z, r24
	sbi(UCSR0B, TXCIE0);
 20c:	80 81       	ld	r24, Z
 20e:	80 64       	ori	r24, 0x40	; 64
 210:	80 83       	st	Z, r24
}
 212:	08 95       	ret

00000214 <uart_putchar_1>:
void uart_putstr(char *sp){
    for(; *sp; sp++)
	    uart_putchar(*sp);
}
*/
int uart_putchar_1(char ch, FILE *stream) {
 214:	cf 93       	push	r28
 216:	c8 2f       	mov	r28, r24
    if(ch == '\n')
 218:	8a 30       	cpi	r24, 0x0A	; 10
 21a:	19 f4       	brne	.+6      	; 0x222 <uart_putchar_1+0xe>
	    uart_putchar_1('\r', stream);
 21c:	8d e0       	ldi	r24, 0x0D	; 13
 21e:	0e 94 0a 01 	call	0x214	; 0x214 <uart_putchar_1>
    //_delay_ms(10);
	while(1) {
	    if((UCSR0A & (1 << UDRE0)) != 0 )
 222:	80 91 c0 00 	lds	r24, 0x00C0
 226:	85 ff       	sbrs	r24, 5
 228:	fc cf       	rjmp	.-8      	; 0x222 <uart_putchar_1+0xe>
		    break;
	}
	UDR0 = ch;
 22a:	c0 93 c6 00 	sts	0x00C6, r28
	return (1);
}
 22e:	81 e0       	ldi	r24, 0x01	; 1
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	cf 91       	pop	r28
 234:	08 95       	ret

00000236 <__vector_27>:

ISR(USART0_TX_vect){
 236:	1f 92       	push	r1
 238:	0f 92       	push	r0
 23a:	0f b6       	in	r0, 0x3f	; 63
 23c:	0f 92       	push	r0
 23e:	0b b6       	in	r0, 0x3b	; 59
 240:	0f 92       	push	r0
 242:	11 24       	eor	r1, r1
 244:	2f 93       	push	r18
 246:	3f 93       	push	r19
 248:	4f 93       	push	r20
 24a:	5f 93       	push	r21
 24c:	6f 93       	push	r22
 24e:	7f 93       	push	r23
 250:	8f 93       	push	r24
 252:	9f 93       	push	r25
 254:	af 93       	push	r26
 256:	bf 93       	push	r27
 258:	ef 93       	push	r30
 25a:	ff 93       	push	r31
	char ch;

	if((ch = q_delete()) == 0)
 25c:	0e 94 75 01 	call	0x2ea	; 0x2ea <q_delete>
 260:	88 23       	and	r24, r24
 262:	19 f4       	brne	.+6      	; 0x26a <__vector_27+0x34>
		uart_busy = 0;
 264:	10 92 33 02 	sts	0x0233, r1
 268:	02 c0       	rjmp	.+4      	; 0x26e <__vector_27+0x38>
	else 
		UDR0 = ch;
 26a:	80 93 c6 00 	sts	0x00C6, r24
}
 26e:	ff 91       	pop	r31
 270:	ef 91       	pop	r30
 272:	bf 91       	pop	r27
 274:	af 91       	pop	r26
 276:	9f 91       	pop	r25
 278:	8f 91       	pop	r24
 27a:	7f 91       	pop	r23
 27c:	6f 91       	pop	r22
 27e:	5f 91       	pop	r21
 280:	4f 91       	pop	r20
 282:	3f 91       	pop	r19
 284:	2f 91       	pop	r18
 286:	0f 90       	pop	r0
 288:	0b be       	out	0x3b, r0	; 59
 28a:	0f 90       	pop	r0
 28c:	0f be       	out	0x3f, r0	; 63
 28e:	0f 90       	pop	r0
 290:	1f 90       	pop	r1
 292:	18 95       	reti

00000294 <q_init>:
#include "cir_queue.h"

char q[Q_SIZE];
int f, r;
void q_init(void) {
	f = r = 0;
 294:	10 92 37 02 	sts	0x0237, r1
 298:	10 92 36 02 	sts	0x0236, r1
 29c:	10 92 35 02 	sts	0x0235, r1
 2a0:	10 92 34 02 	sts	0x0234, r1
}
 2a4:	08 95       	ret

000002a6 <q_insert>:
int q_insert(char ch) {
 2a6:	48 2f       	mov	r20, r24
	if((r + 1) % Q_SIZE == f)
 2a8:	20 91 36 02 	lds	r18, 0x0236
 2ac:	30 91 37 02 	lds	r19, 0x0237
 2b0:	2f 5f       	subi	r18, 0xFF	; 255
 2b2:	3f 4f       	sbci	r19, 0xFF	; 255
 2b4:	c9 01       	movw	r24, r18
 2b6:	60 e4       	ldi	r22, 0x40	; 64
 2b8:	70 e0       	ldi	r23, 0x00	; 0
 2ba:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <__divmodhi4>
 2be:	9c 01       	movw	r18, r24
 2c0:	80 91 34 02 	lds	r24, 0x0234
 2c4:	90 91 35 02 	lds	r25, 0x0235
 2c8:	28 17       	cp	r18, r24
 2ca:	39 07       	cpc	r19, r25
 2cc:	59 f0       	breq	.+22     	; 0x2e4 <q_insert+0x3e>
		return (0);
	r = (r + 1) % Q_SIZE;
 2ce:	30 93 37 02 	sts	0x0237, r19
 2d2:	20 93 36 02 	sts	0x0236, r18
	q[r] = ch;
 2d6:	28 5c       	subi	r18, 0xC8	; 200
 2d8:	3d 4f       	sbci	r19, 0xFD	; 253
 2da:	f9 01       	movw	r30, r18
 2dc:	40 83       	st	Z, r20
	return(1);
 2de:	81 e0       	ldi	r24, 0x01	; 1
 2e0:	90 e0       	ldi	r25, 0x00	; 0
 2e2:	08 95       	ret
void q_init(void) {
	f = r = 0;
}
int q_insert(char ch) {
	if((r + 1) % Q_SIZE == f)
		return (0);
 2e4:	80 e0       	ldi	r24, 0x00	; 0
 2e6:	90 e0       	ldi	r25, 0x00	; 0
	r = (r + 1) % Q_SIZE;
	q[r] = ch;
	return(1);
}
 2e8:	08 95       	ret

000002ea <q_delete>:
int q_delete(void) {
	if( r == f)
 2ea:	80 91 34 02 	lds	r24, 0x0234
 2ee:	90 91 35 02 	lds	r25, 0x0235
 2f2:	20 91 36 02 	lds	r18, 0x0236
 2f6:	30 91 37 02 	lds	r19, 0x0237
 2fa:	28 17       	cp	r18, r24
 2fc:	39 07       	cpc	r19, r25
 2fe:	79 f0       	breq	.+30     	; 0x31e <q_delete+0x34>
		return(0);
    f = (f+1) % Q_SIZE;
 300:	01 96       	adiw	r24, 0x01	; 1
 302:	60 e4       	ldi	r22, 0x40	; 64
 304:	70 e0       	ldi	r23, 0x00	; 0
 306:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <__divmodhi4>
 30a:	90 93 35 02 	sts	0x0235, r25
 30e:	80 93 34 02 	sts	0x0234, r24
	return(q[f]);
 312:	88 5c       	subi	r24, 0xC8	; 200
 314:	9d 4f       	sbci	r25, 0xFD	; 253
 316:	fc 01       	movw	r30, r24
 318:	80 81       	ld	r24, Z
 31a:	90 e0       	ldi	r25, 0x00	; 0
 31c:	08 95       	ret
	q[r] = ch;
	return(1);
}
int q_delete(void) {
	if( r == f)
		return(0);
 31e:	80 e0       	ldi	r24, 0x00	; 0
 320:	90 e0       	ldi	r25, 0x00	; 0
    f = (f+1) % Q_SIZE;
	return(q[f]);
}
 322:	08 95       	ret

00000324 <is_prime>:
// app_prime.c
#include <stdio.h>
#include "app_prime.h"

int is_prime(int n) {
 324:	cf 93       	push	r28
 326:	df 93       	push	r29
 328:	fc 01       	movw	r30, r24
    int i;
	for(i = 2; i <= n/2; i++){
 32a:	62 e0       	ldi	r22, 0x02	; 2
 32c:	70 e0       	ldi	r23, 0x00	; 0
 32e:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <__divmodhi4>
 332:	eb 01       	movw	r28, r22
 334:	22 e0       	ldi	r18, 0x02	; 2
 336:	30 e0       	ldi	r19, 0x00	; 0
 338:	08 c0       	rjmp	.+16     	; 0x34a <is_prime+0x26>
		if((n % i) == 0) 
 33a:	cf 01       	movw	r24, r30
 33c:	b9 01       	movw	r22, r18
 33e:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <__divmodhi4>
 342:	00 97       	sbiw	r24, 0x00	; 0
 344:	41 f0       	breq	.+16     	; 0x356 <is_prime+0x32>
#include <stdio.h>
#include "app_prime.h"

int is_prime(int n) {
    int i;
	for(i = 2; i <= n/2; i++){
 346:	2f 5f       	subi	r18, 0xFF	; 255
 348:	3f 4f       	sbci	r19, 0xFF	; 255
 34a:	c2 17       	cp	r28, r18
 34c:	d3 07       	cpc	r29, r19
 34e:	ac f7       	brge	.-22     	; 0x33a <is_prime+0x16>
		if((n % i) == 0) 
			return(0);
	}
	return(1);
 350:	81 e0       	ldi	r24, 0x01	; 1
 352:	90 e0       	ldi	r25, 0x00	; 0
 354:	02 c0       	rjmp	.+4      	; 0x35a <is_prime+0x36>

int is_prime(int n) {
    int i;
	for(i = 2; i <= n/2; i++){
		if((n % i) == 0) 
			return(0);
 356:	80 e0       	ldi	r24, 0x00	; 0
 358:	90 e0       	ldi	r25, 0x00	; 0
	}
	return(1);
}
 35a:	df 91       	pop	r29
 35c:	cf 91       	pop	r28
 35e:	08 95       	ret

00000360 <app_prime>:

void app_prime(int t) {
 360:	cf 92       	push	r12
 362:	df 92       	push	r13
 364:	ef 92       	push	r14
 366:	ff 92       	push	r15
 368:	0f 93       	push	r16
 36a:	1f 93       	push	r17
 36c:	cf 93       	push	r28
 36e:	df 93       	push	r29
 370:	7c 01       	movw	r14, r24
    int n, count = 0;
 372:	00 e0       	ldi	r16, 0x00	; 0
 374:	10 e0       	ldi	r17, 0x00	; 0
	for (n = 2; n <= t; n++){
 376:	c2 e0       	ldi	r28, 0x02	; 2
 378:	d0 e0       	ldi	r29, 0x00	; 0
		if(is_prime(n)) {
		    count++;
			printf("%d is a prime number!!!\n", n);
 37a:	2e e0       	ldi	r18, 0x0E	; 14
 37c:	c2 2e       	mov	r12, r18
 37e:	22 e0       	ldi	r18, 0x02	; 2
 380:	d2 2e       	mov	r13, r18
	return(1);
}

void app_prime(int t) {
    int n, count = 0;
	for (n = 2; n <= t; n++){
 382:	16 c0       	rjmp	.+44     	; 0x3b0 <app_prime+0x50>
		if(is_prime(n)) {
 384:	ce 01       	movw	r24, r28
 386:	0e 94 92 01 	call	0x324	; 0x324 <is_prime>
 38a:	00 97       	sbiw	r24, 0x00	; 0
 38c:	81 f0       	breq	.+32     	; 0x3ae <app_prime+0x4e>
		    count++;
 38e:	0f 5f       	subi	r16, 0xFF	; 255
 390:	1f 4f       	sbci	r17, 0xFF	; 255
			printf("%d is a prime number!!!\n", n);
 392:	00 d0       	rcall	.+0      	; 0x394 <app_prime+0x34>
 394:	0f 92       	push	r0
 396:	ed b7       	in	r30, 0x3d	; 61
 398:	fe b7       	in	r31, 0x3e	; 62
 39a:	d2 82       	std	Z+2, r13	; 0x02
 39c:	c1 82       	std	Z+1, r12	; 0x01
 39e:	d4 83       	std	Z+4, r29	; 0x04
 3a0:	c3 83       	std	Z+3, r28	; 0x03
 3a2:	0e 94 23 02 	call	0x446	; 0x446 <printf>
 3a6:	0f 90       	pop	r0
 3a8:	0f 90       	pop	r0
 3aa:	0f 90       	pop	r0
 3ac:	0f 90       	pop	r0
	return(1);
}

void app_prime(int t) {
    int n, count = 0;
	for (n = 2; n <= t; n++){
 3ae:	21 96       	adiw	r28, 0x01	; 1
 3b0:	ec 16       	cp	r14, r28
 3b2:	fd 06       	cpc	r15, r29
 3b4:	3c f7       	brge	.-50     	; 0x384 <app_prime+0x24>
		if(is_prime(n)) {
		    count++;
			printf("%d is a prime number!!!\n", n);
		}
	}
	printf("count=%d\n", count);
 3b6:	00 d0       	rcall	.+0      	; 0x3b8 <app_prime+0x58>
 3b8:	0f 92       	push	r0
 3ba:	87 e2       	ldi	r24, 0x27	; 39
 3bc:	92 e0       	ldi	r25, 0x02	; 2
 3be:	ed b7       	in	r30, 0x3d	; 61
 3c0:	fe b7       	in	r31, 0x3e	; 62
 3c2:	92 83       	std	Z+2, r25	; 0x02
 3c4:	81 83       	std	Z+1, r24	; 0x01
 3c6:	14 83       	std	Z+4, r17	; 0x04
 3c8:	03 83       	std	Z+3, r16	; 0x03
 3ca:	0e 94 23 02 	call	0x446	; 0x446 <printf>
 3ce:	0f 90       	pop	r0
 3d0:	0f 90       	pop	r0
 3d2:	0f 90       	pop	r0
 3d4:	0f 90       	pop	r0
}
 3d6:	df 91       	pop	r29
 3d8:	cf 91       	pop	r28
 3da:	1f 91       	pop	r17
 3dc:	0f 91       	pop	r16
 3de:	ff 90       	pop	r15
 3e0:	ef 90       	pop	r14
 3e2:	df 90       	pop	r13
 3e4:	cf 90       	pop	r12
 3e6:	08 95       	ret

000003e8 <main>:
#include "uart.h"
#include "app_prime.h"

int main()
{
	uart_init();
 3e8:	0e 94 ed 00 	call	0x1da	; 0x1da <uart_init>
   	sei();	
 3ec:	78 94       	sei

	app_prime(2000);
 3ee:	80 ed       	ldi	r24, 0xD0	; 208
 3f0:	97 e0       	ldi	r25, 0x07	; 7
 3f2:	0e 94 b0 01 	call	0x360	; 0x360 <app_prime>
 3f6:	ff cf       	rjmp	.-2      	; 0x3f6 <main+0xe>

000003f8 <__divmodhi4>:
 3f8:	97 fb       	bst	r25, 7
 3fa:	09 2e       	mov	r0, r25
 3fc:	07 26       	eor	r0, r23
 3fe:	0a d0       	rcall	.+20     	; 0x414 <__divmodhi4_neg1>
 400:	77 fd       	sbrc	r23, 7
 402:	04 d0       	rcall	.+8      	; 0x40c <__divmodhi4_neg2>
 404:	0c d0       	rcall	.+24     	; 0x41e <__udivmodhi4>
 406:	06 d0       	rcall	.+12     	; 0x414 <__divmodhi4_neg1>
 408:	00 20       	and	r0, r0
 40a:	1a f4       	brpl	.+6      	; 0x412 <__divmodhi4_exit>

0000040c <__divmodhi4_neg2>:
 40c:	70 95       	com	r23
 40e:	61 95       	neg	r22
 410:	7f 4f       	sbci	r23, 0xFF	; 255

00000412 <__divmodhi4_exit>:
 412:	08 95       	ret

00000414 <__divmodhi4_neg1>:
 414:	f6 f7       	brtc	.-4      	; 0x412 <__divmodhi4_exit>
 416:	90 95       	com	r25
 418:	81 95       	neg	r24
 41a:	9f 4f       	sbci	r25, 0xFF	; 255
 41c:	08 95       	ret

0000041e <__udivmodhi4>:
 41e:	aa 1b       	sub	r26, r26
 420:	bb 1b       	sub	r27, r27
 422:	51 e1       	ldi	r21, 0x11	; 17
 424:	07 c0       	rjmp	.+14     	; 0x434 <__udivmodhi4_ep>

00000426 <__udivmodhi4_loop>:
 426:	aa 1f       	adc	r26, r26
 428:	bb 1f       	adc	r27, r27
 42a:	a6 17       	cp	r26, r22
 42c:	b7 07       	cpc	r27, r23
 42e:	10 f0       	brcs	.+4      	; 0x434 <__udivmodhi4_ep>
 430:	a6 1b       	sub	r26, r22
 432:	b7 0b       	sbc	r27, r23

00000434 <__udivmodhi4_ep>:
 434:	88 1f       	adc	r24, r24
 436:	99 1f       	adc	r25, r25
 438:	5a 95       	dec	r21
 43a:	a9 f7       	brne	.-22     	; 0x426 <__udivmodhi4_loop>
 43c:	80 95       	com	r24
 43e:	90 95       	com	r25
 440:	bc 01       	movw	r22, r24
 442:	cd 01       	movw	r24, r26
 444:	08 95       	ret

00000446 <printf>:
 446:	cf 93       	push	r28
 448:	df 93       	push	r29
 44a:	cd b7       	in	r28, 0x3d	; 61
 44c:	de b7       	in	r29, 0x3e	; 62
 44e:	fe 01       	movw	r30, r28
 450:	36 96       	adiw	r30, 0x06	; 6
 452:	61 91       	ld	r22, Z+
 454:	71 91       	ld	r23, Z+
 456:	80 91 7a 02 	lds	r24, 0x027A
 45a:	90 91 7b 02 	lds	r25, 0x027B
 45e:	af 01       	movw	r20, r30
 460:	0e 94 35 02 	call	0x46a	; 0x46a <vfprintf>
 464:	df 91       	pop	r29
 466:	cf 91       	pop	r28
 468:	08 95       	ret

0000046a <vfprintf>:
 46a:	2f 92       	push	r2
 46c:	3f 92       	push	r3
 46e:	4f 92       	push	r4
 470:	5f 92       	push	r5
 472:	6f 92       	push	r6
 474:	7f 92       	push	r7
 476:	8f 92       	push	r8
 478:	9f 92       	push	r9
 47a:	af 92       	push	r10
 47c:	bf 92       	push	r11
 47e:	cf 92       	push	r12
 480:	df 92       	push	r13
 482:	ef 92       	push	r14
 484:	ff 92       	push	r15
 486:	0f 93       	push	r16
 488:	1f 93       	push	r17
 48a:	cf 93       	push	r28
 48c:	df 93       	push	r29
 48e:	cd b7       	in	r28, 0x3d	; 61
 490:	de b7       	in	r29, 0x3e	; 62
 492:	2d 97       	sbiw	r28, 0x0d	; 13
 494:	0f b6       	in	r0, 0x3f	; 63
 496:	f8 94       	cli
 498:	de bf       	out	0x3e, r29	; 62
 49a:	0f be       	out	0x3f, r0	; 63
 49c:	cd bf       	out	0x3d, r28	; 61
 49e:	3c 01       	movw	r6, r24
 4a0:	7d 87       	std	Y+13, r23	; 0x0d
 4a2:	6c 87       	std	Y+12, r22	; 0x0c
 4a4:	5a 01       	movw	r10, r20
 4a6:	fc 01       	movw	r30, r24
 4a8:	17 82       	std	Z+7, r1	; 0x07
 4aa:	16 82       	std	Z+6, r1	; 0x06
 4ac:	83 81       	ldd	r24, Z+3	; 0x03
 4ae:	81 ff       	sbrs	r24, 1
 4b0:	c8 c1       	rjmp	.+912    	; 0x842 <vfprintf+0x3d8>
 4b2:	2e 01       	movw	r4, r28
 4b4:	08 94       	sec
 4b6:	41 1c       	adc	r4, r1
 4b8:	51 1c       	adc	r5, r1
 4ba:	f3 01       	movw	r30, r6
 4bc:	93 81       	ldd	r25, Z+3	; 0x03
 4be:	ec 85       	ldd	r30, Y+12	; 0x0c
 4c0:	fd 85       	ldd	r31, Y+13	; 0x0d
 4c2:	93 fd       	sbrc	r25, 3
 4c4:	85 91       	lpm	r24, Z+
 4c6:	93 ff       	sbrs	r25, 3
 4c8:	81 91       	ld	r24, Z+
 4ca:	fd 87       	std	Y+13, r31	; 0x0d
 4cc:	ec 87       	std	Y+12, r30	; 0x0c
 4ce:	88 23       	and	r24, r24
 4d0:	09 f4       	brne	.+2      	; 0x4d4 <vfprintf+0x6a>
 4d2:	b3 c1       	rjmp	.+870    	; 0x83a <vfprintf+0x3d0>
 4d4:	85 32       	cpi	r24, 0x25	; 37
 4d6:	41 f4       	brne	.+16     	; 0x4e8 <vfprintf+0x7e>
 4d8:	93 fd       	sbrc	r25, 3
 4da:	85 91       	lpm	r24, Z+
 4dc:	93 ff       	sbrs	r25, 3
 4de:	81 91       	ld	r24, Z+
 4e0:	fd 87       	std	Y+13, r31	; 0x0d
 4e2:	ec 87       	std	Y+12, r30	; 0x0c
 4e4:	85 32       	cpi	r24, 0x25	; 37
 4e6:	29 f4       	brne	.+10     	; 0x4f2 <vfprintf+0x88>
 4e8:	90 e0       	ldi	r25, 0x00	; 0
 4ea:	b3 01       	movw	r22, r6
 4ec:	0e 94 52 04 	call	0x8a4	; 0x8a4 <fputc>
 4f0:	e4 cf       	rjmp	.-56     	; 0x4ba <vfprintf+0x50>
 4f2:	ff 24       	eor	r15, r15
 4f4:	ee 24       	eor	r14, r14
 4f6:	10 e0       	ldi	r17, 0x00	; 0
 4f8:	10 32       	cpi	r17, 0x20	; 32
 4fa:	b0 f4       	brcc	.+44     	; 0x528 <vfprintf+0xbe>
 4fc:	8b 32       	cpi	r24, 0x2B	; 43
 4fe:	69 f0       	breq	.+26     	; 0x51a <vfprintf+0xb0>
 500:	8c 32       	cpi	r24, 0x2C	; 44
 502:	28 f4       	brcc	.+10     	; 0x50e <vfprintf+0xa4>
 504:	80 32       	cpi	r24, 0x20	; 32
 506:	51 f0       	breq	.+20     	; 0x51c <vfprintf+0xb2>
 508:	83 32       	cpi	r24, 0x23	; 35
 50a:	71 f4       	brne	.+28     	; 0x528 <vfprintf+0xbe>
 50c:	0b c0       	rjmp	.+22     	; 0x524 <vfprintf+0xba>
 50e:	8d 32       	cpi	r24, 0x2D	; 45
 510:	39 f0       	breq	.+14     	; 0x520 <vfprintf+0xb6>
 512:	80 33       	cpi	r24, 0x30	; 48
 514:	49 f4       	brne	.+18     	; 0x528 <vfprintf+0xbe>
 516:	11 60       	ori	r17, 0x01	; 1
 518:	2c c0       	rjmp	.+88     	; 0x572 <vfprintf+0x108>
 51a:	12 60       	ori	r17, 0x02	; 2
 51c:	14 60       	ori	r17, 0x04	; 4
 51e:	29 c0       	rjmp	.+82     	; 0x572 <vfprintf+0x108>
 520:	18 60       	ori	r17, 0x08	; 8
 522:	27 c0       	rjmp	.+78     	; 0x572 <vfprintf+0x108>
 524:	10 61       	ori	r17, 0x10	; 16
 526:	25 c0       	rjmp	.+74     	; 0x572 <vfprintf+0x108>
 528:	17 fd       	sbrc	r17, 7
 52a:	2e c0       	rjmp	.+92     	; 0x588 <vfprintf+0x11e>
 52c:	28 2f       	mov	r18, r24
 52e:	20 53       	subi	r18, 0x30	; 48
 530:	2a 30       	cpi	r18, 0x0A	; 10
 532:	98 f4       	brcc	.+38     	; 0x55a <vfprintf+0xf0>
 534:	16 ff       	sbrs	r17, 6
 536:	08 c0       	rjmp	.+16     	; 0x548 <vfprintf+0xde>
 538:	8f 2d       	mov	r24, r15
 53a:	88 0f       	add	r24, r24
 53c:	f8 2e       	mov	r15, r24
 53e:	ff 0c       	add	r15, r15
 540:	ff 0c       	add	r15, r15
 542:	f8 0e       	add	r15, r24
 544:	f2 0e       	add	r15, r18
 546:	15 c0       	rjmp	.+42     	; 0x572 <vfprintf+0x108>
 548:	8e 2d       	mov	r24, r14
 54a:	88 0f       	add	r24, r24
 54c:	e8 2e       	mov	r14, r24
 54e:	ee 0c       	add	r14, r14
 550:	ee 0c       	add	r14, r14
 552:	e8 0e       	add	r14, r24
 554:	e2 0e       	add	r14, r18
 556:	10 62       	ori	r17, 0x20	; 32
 558:	0c c0       	rjmp	.+24     	; 0x572 <vfprintf+0x108>
 55a:	8e 32       	cpi	r24, 0x2E	; 46
 55c:	21 f4       	brne	.+8      	; 0x566 <vfprintf+0xfc>
 55e:	16 fd       	sbrc	r17, 6
 560:	6c c1       	rjmp	.+728    	; 0x83a <vfprintf+0x3d0>
 562:	10 64       	ori	r17, 0x40	; 64
 564:	06 c0       	rjmp	.+12     	; 0x572 <vfprintf+0x108>
 566:	8c 36       	cpi	r24, 0x6C	; 108
 568:	11 f4       	brne	.+4      	; 0x56e <vfprintf+0x104>
 56a:	10 68       	ori	r17, 0x80	; 128
 56c:	02 c0       	rjmp	.+4      	; 0x572 <vfprintf+0x108>
 56e:	88 36       	cpi	r24, 0x68	; 104
 570:	59 f4       	brne	.+22     	; 0x588 <vfprintf+0x11e>
 572:	ec 85       	ldd	r30, Y+12	; 0x0c
 574:	fd 85       	ldd	r31, Y+13	; 0x0d
 576:	93 fd       	sbrc	r25, 3
 578:	85 91       	lpm	r24, Z+
 57a:	93 ff       	sbrs	r25, 3
 57c:	81 91       	ld	r24, Z+
 57e:	fd 87       	std	Y+13, r31	; 0x0d
 580:	ec 87       	std	Y+12, r30	; 0x0c
 582:	88 23       	and	r24, r24
 584:	09 f0       	breq	.+2      	; 0x588 <vfprintf+0x11e>
 586:	b8 cf       	rjmp	.-144    	; 0x4f8 <vfprintf+0x8e>
 588:	98 2f       	mov	r25, r24
 58a:	95 54       	subi	r25, 0x45	; 69
 58c:	93 30       	cpi	r25, 0x03	; 3
 58e:	18 f0       	brcs	.+6      	; 0x596 <vfprintf+0x12c>
 590:	90 52       	subi	r25, 0x20	; 32
 592:	93 30       	cpi	r25, 0x03	; 3
 594:	38 f4       	brcc	.+14     	; 0x5a4 <vfprintf+0x13a>
 596:	24 e0       	ldi	r18, 0x04	; 4
 598:	30 e0       	ldi	r19, 0x00	; 0
 59a:	a2 0e       	add	r10, r18
 59c:	b3 1e       	adc	r11, r19
 59e:	3f e3       	ldi	r19, 0x3F	; 63
 5a0:	39 83       	std	Y+1, r19	; 0x01
 5a2:	0f c0       	rjmp	.+30     	; 0x5c2 <vfprintf+0x158>
 5a4:	83 36       	cpi	r24, 0x63	; 99
 5a6:	31 f0       	breq	.+12     	; 0x5b4 <vfprintf+0x14a>
 5a8:	83 37       	cpi	r24, 0x73	; 115
 5aa:	81 f0       	breq	.+32     	; 0x5cc <vfprintf+0x162>
 5ac:	83 35       	cpi	r24, 0x53	; 83
 5ae:	09 f0       	breq	.+2      	; 0x5b2 <vfprintf+0x148>
 5b0:	5a c0       	rjmp	.+180    	; 0x666 <vfprintf+0x1fc>
 5b2:	22 c0       	rjmp	.+68     	; 0x5f8 <vfprintf+0x18e>
 5b4:	f5 01       	movw	r30, r10
 5b6:	80 81       	ld	r24, Z
 5b8:	89 83       	std	Y+1, r24	; 0x01
 5ba:	22 e0       	ldi	r18, 0x02	; 2
 5bc:	30 e0       	ldi	r19, 0x00	; 0
 5be:	a2 0e       	add	r10, r18
 5c0:	b3 1e       	adc	r11, r19
 5c2:	21 e0       	ldi	r18, 0x01	; 1
 5c4:	c2 2e       	mov	r12, r18
 5c6:	d1 2c       	mov	r13, r1
 5c8:	42 01       	movw	r8, r4
 5ca:	14 c0       	rjmp	.+40     	; 0x5f4 <vfprintf+0x18a>
 5cc:	92 e0       	ldi	r25, 0x02	; 2
 5ce:	29 2e       	mov	r2, r25
 5d0:	31 2c       	mov	r3, r1
 5d2:	2a 0c       	add	r2, r10
 5d4:	3b 1c       	adc	r3, r11
 5d6:	f5 01       	movw	r30, r10
 5d8:	80 80       	ld	r8, Z
 5da:	91 80       	ldd	r9, Z+1	; 0x01
 5dc:	16 ff       	sbrs	r17, 6
 5de:	03 c0       	rjmp	.+6      	; 0x5e6 <vfprintf+0x17c>
 5e0:	6f 2d       	mov	r22, r15
 5e2:	70 e0       	ldi	r23, 0x00	; 0
 5e4:	02 c0       	rjmp	.+4      	; 0x5ea <vfprintf+0x180>
 5e6:	6f ef       	ldi	r22, 0xFF	; 255
 5e8:	7f ef       	ldi	r23, 0xFF	; 255
 5ea:	c4 01       	movw	r24, r8
 5ec:	0e 94 47 04 	call	0x88e	; 0x88e <strnlen>
 5f0:	6c 01       	movw	r12, r24
 5f2:	51 01       	movw	r10, r2
 5f4:	1f 77       	andi	r17, 0x7F	; 127
 5f6:	15 c0       	rjmp	.+42     	; 0x622 <vfprintf+0x1b8>
 5f8:	82 e0       	ldi	r24, 0x02	; 2
 5fa:	28 2e       	mov	r2, r24
 5fc:	31 2c       	mov	r3, r1
 5fe:	2a 0c       	add	r2, r10
 600:	3b 1c       	adc	r3, r11
 602:	f5 01       	movw	r30, r10
 604:	80 80       	ld	r8, Z
 606:	91 80       	ldd	r9, Z+1	; 0x01
 608:	16 ff       	sbrs	r17, 6
 60a:	03 c0       	rjmp	.+6      	; 0x612 <vfprintf+0x1a8>
 60c:	6f 2d       	mov	r22, r15
 60e:	70 e0       	ldi	r23, 0x00	; 0
 610:	02 c0       	rjmp	.+4      	; 0x616 <vfprintf+0x1ac>
 612:	6f ef       	ldi	r22, 0xFF	; 255
 614:	7f ef       	ldi	r23, 0xFF	; 255
 616:	c4 01       	movw	r24, r8
 618:	0e 94 3c 04 	call	0x878	; 0x878 <strnlen_P>
 61c:	6c 01       	movw	r12, r24
 61e:	10 68       	ori	r17, 0x80	; 128
 620:	51 01       	movw	r10, r2
 622:	13 fd       	sbrc	r17, 3
 624:	1c c0       	rjmp	.+56     	; 0x65e <vfprintf+0x1f4>
 626:	06 c0       	rjmp	.+12     	; 0x634 <vfprintf+0x1ca>
 628:	80 e2       	ldi	r24, 0x20	; 32
 62a:	90 e0       	ldi	r25, 0x00	; 0
 62c:	b3 01       	movw	r22, r6
 62e:	0e 94 52 04 	call	0x8a4	; 0x8a4 <fputc>
 632:	ea 94       	dec	r14
 634:	8e 2d       	mov	r24, r14
 636:	90 e0       	ldi	r25, 0x00	; 0
 638:	c8 16       	cp	r12, r24
 63a:	d9 06       	cpc	r13, r25
 63c:	a8 f3       	brcs	.-22     	; 0x628 <vfprintf+0x1be>
 63e:	0f c0       	rjmp	.+30     	; 0x65e <vfprintf+0x1f4>
 640:	f4 01       	movw	r30, r8
 642:	17 fd       	sbrc	r17, 7
 644:	85 91       	lpm	r24, Z+
 646:	17 ff       	sbrs	r17, 7
 648:	81 91       	ld	r24, Z+
 64a:	4f 01       	movw	r8, r30
 64c:	90 e0       	ldi	r25, 0x00	; 0
 64e:	b3 01       	movw	r22, r6
 650:	0e 94 52 04 	call	0x8a4	; 0x8a4 <fputc>
 654:	e1 10       	cpse	r14, r1
 656:	ea 94       	dec	r14
 658:	08 94       	sec
 65a:	c1 08       	sbc	r12, r1
 65c:	d1 08       	sbc	r13, r1
 65e:	c1 14       	cp	r12, r1
 660:	d1 04       	cpc	r13, r1
 662:	71 f7       	brne	.-36     	; 0x640 <vfprintf+0x1d6>
 664:	e7 c0       	rjmp	.+462    	; 0x834 <vfprintf+0x3ca>
 666:	84 36       	cpi	r24, 0x64	; 100
 668:	11 f0       	breq	.+4      	; 0x66e <vfprintf+0x204>
 66a:	89 36       	cpi	r24, 0x69	; 105
 66c:	51 f5       	brne	.+84     	; 0x6c2 <vfprintf+0x258>
 66e:	f5 01       	movw	r30, r10
 670:	17 ff       	sbrs	r17, 7
 672:	07 c0       	rjmp	.+14     	; 0x682 <vfprintf+0x218>
 674:	80 81       	ld	r24, Z
 676:	91 81       	ldd	r25, Z+1	; 0x01
 678:	a2 81       	ldd	r26, Z+2	; 0x02
 67a:	b3 81       	ldd	r27, Z+3	; 0x03
 67c:	24 e0       	ldi	r18, 0x04	; 4
 67e:	30 e0       	ldi	r19, 0x00	; 0
 680:	08 c0       	rjmp	.+16     	; 0x692 <vfprintf+0x228>
 682:	80 81       	ld	r24, Z
 684:	91 81       	ldd	r25, Z+1	; 0x01
 686:	aa 27       	eor	r26, r26
 688:	97 fd       	sbrc	r25, 7
 68a:	a0 95       	com	r26
 68c:	ba 2f       	mov	r27, r26
 68e:	22 e0       	ldi	r18, 0x02	; 2
 690:	30 e0       	ldi	r19, 0x00	; 0
 692:	a2 0e       	add	r10, r18
 694:	b3 1e       	adc	r11, r19
 696:	01 2f       	mov	r16, r17
 698:	0f 76       	andi	r16, 0x6F	; 111
 69a:	b7 ff       	sbrs	r27, 7
 69c:	08 c0       	rjmp	.+16     	; 0x6ae <vfprintf+0x244>
 69e:	b0 95       	com	r27
 6a0:	a0 95       	com	r26
 6a2:	90 95       	com	r25
 6a4:	81 95       	neg	r24
 6a6:	9f 4f       	sbci	r25, 0xFF	; 255
 6a8:	af 4f       	sbci	r26, 0xFF	; 255
 6aa:	bf 4f       	sbci	r27, 0xFF	; 255
 6ac:	00 68       	ori	r16, 0x80	; 128
 6ae:	bc 01       	movw	r22, r24
 6b0:	cd 01       	movw	r24, r26
 6b2:	a2 01       	movw	r20, r4
 6b4:	2a e0       	ldi	r18, 0x0A	; 10
 6b6:	30 e0       	ldi	r19, 0x00	; 0
 6b8:	0e 94 7e 04 	call	0x8fc	; 0x8fc <__ultoa_invert>
 6bc:	d8 2e       	mov	r13, r24
 6be:	d4 18       	sub	r13, r4
 6c0:	3f c0       	rjmp	.+126    	; 0x740 <vfprintf+0x2d6>
 6c2:	85 37       	cpi	r24, 0x75	; 117
 6c4:	21 f4       	brne	.+8      	; 0x6ce <vfprintf+0x264>
 6c6:	1f 7e       	andi	r17, 0xEF	; 239
 6c8:	2a e0       	ldi	r18, 0x0A	; 10
 6ca:	30 e0       	ldi	r19, 0x00	; 0
 6cc:	20 c0       	rjmp	.+64     	; 0x70e <vfprintf+0x2a4>
 6ce:	19 7f       	andi	r17, 0xF9	; 249
 6d0:	8f 36       	cpi	r24, 0x6F	; 111
 6d2:	a9 f0       	breq	.+42     	; 0x6fe <vfprintf+0x294>
 6d4:	80 37       	cpi	r24, 0x70	; 112
 6d6:	20 f4       	brcc	.+8      	; 0x6e0 <vfprintf+0x276>
 6d8:	88 35       	cpi	r24, 0x58	; 88
 6da:	09 f0       	breq	.+2      	; 0x6de <vfprintf+0x274>
 6dc:	ae c0       	rjmp	.+348    	; 0x83a <vfprintf+0x3d0>
 6de:	0b c0       	rjmp	.+22     	; 0x6f6 <vfprintf+0x28c>
 6e0:	80 37       	cpi	r24, 0x70	; 112
 6e2:	21 f0       	breq	.+8      	; 0x6ec <vfprintf+0x282>
 6e4:	88 37       	cpi	r24, 0x78	; 120
 6e6:	09 f0       	breq	.+2      	; 0x6ea <vfprintf+0x280>
 6e8:	a8 c0       	rjmp	.+336    	; 0x83a <vfprintf+0x3d0>
 6ea:	01 c0       	rjmp	.+2      	; 0x6ee <vfprintf+0x284>
 6ec:	10 61       	ori	r17, 0x10	; 16
 6ee:	14 ff       	sbrs	r17, 4
 6f0:	09 c0       	rjmp	.+18     	; 0x704 <vfprintf+0x29a>
 6f2:	14 60       	ori	r17, 0x04	; 4
 6f4:	07 c0       	rjmp	.+14     	; 0x704 <vfprintf+0x29a>
 6f6:	14 ff       	sbrs	r17, 4
 6f8:	08 c0       	rjmp	.+16     	; 0x70a <vfprintf+0x2a0>
 6fa:	16 60       	ori	r17, 0x06	; 6
 6fc:	06 c0       	rjmp	.+12     	; 0x70a <vfprintf+0x2a0>
 6fe:	28 e0       	ldi	r18, 0x08	; 8
 700:	30 e0       	ldi	r19, 0x00	; 0
 702:	05 c0       	rjmp	.+10     	; 0x70e <vfprintf+0x2a4>
 704:	20 e1       	ldi	r18, 0x10	; 16
 706:	30 e0       	ldi	r19, 0x00	; 0
 708:	02 c0       	rjmp	.+4      	; 0x70e <vfprintf+0x2a4>
 70a:	20 e1       	ldi	r18, 0x10	; 16
 70c:	32 e0       	ldi	r19, 0x02	; 2
 70e:	f5 01       	movw	r30, r10
 710:	17 ff       	sbrs	r17, 7
 712:	07 c0       	rjmp	.+14     	; 0x722 <vfprintf+0x2b8>
 714:	60 81       	ld	r22, Z
 716:	71 81       	ldd	r23, Z+1	; 0x01
 718:	82 81       	ldd	r24, Z+2	; 0x02
 71a:	93 81       	ldd	r25, Z+3	; 0x03
 71c:	44 e0       	ldi	r20, 0x04	; 4
 71e:	50 e0       	ldi	r21, 0x00	; 0
 720:	06 c0       	rjmp	.+12     	; 0x72e <vfprintf+0x2c4>
 722:	60 81       	ld	r22, Z
 724:	71 81       	ldd	r23, Z+1	; 0x01
 726:	80 e0       	ldi	r24, 0x00	; 0
 728:	90 e0       	ldi	r25, 0x00	; 0
 72a:	42 e0       	ldi	r20, 0x02	; 2
 72c:	50 e0       	ldi	r21, 0x00	; 0
 72e:	a4 0e       	add	r10, r20
 730:	b5 1e       	adc	r11, r21
 732:	a2 01       	movw	r20, r4
 734:	0e 94 7e 04 	call	0x8fc	; 0x8fc <__ultoa_invert>
 738:	d8 2e       	mov	r13, r24
 73a:	d4 18       	sub	r13, r4
 73c:	01 2f       	mov	r16, r17
 73e:	0f 77       	andi	r16, 0x7F	; 127
 740:	06 ff       	sbrs	r16, 6
 742:	09 c0       	rjmp	.+18     	; 0x756 <vfprintf+0x2ec>
 744:	0e 7f       	andi	r16, 0xFE	; 254
 746:	df 14       	cp	r13, r15
 748:	30 f4       	brcc	.+12     	; 0x756 <vfprintf+0x2ec>
 74a:	04 ff       	sbrs	r16, 4
 74c:	06 c0       	rjmp	.+12     	; 0x75a <vfprintf+0x2f0>
 74e:	02 fd       	sbrc	r16, 2
 750:	04 c0       	rjmp	.+8      	; 0x75a <vfprintf+0x2f0>
 752:	0f 7e       	andi	r16, 0xEF	; 239
 754:	02 c0       	rjmp	.+4      	; 0x75a <vfprintf+0x2f0>
 756:	1d 2d       	mov	r17, r13
 758:	01 c0       	rjmp	.+2      	; 0x75c <vfprintf+0x2f2>
 75a:	1f 2d       	mov	r17, r15
 75c:	80 2f       	mov	r24, r16
 75e:	90 e0       	ldi	r25, 0x00	; 0
 760:	04 ff       	sbrs	r16, 4
 762:	0c c0       	rjmp	.+24     	; 0x77c <vfprintf+0x312>
 764:	fe 01       	movw	r30, r28
 766:	ed 0d       	add	r30, r13
 768:	f1 1d       	adc	r31, r1
 76a:	20 81       	ld	r18, Z
 76c:	20 33       	cpi	r18, 0x30	; 48
 76e:	11 f4       	brne	.+4      	; 0x774 <vfprintf+0x30a>
 770:	09 7e       	andi	r16, 0xE9	; 233
 772:	09 c0       	rjmp	.+18     	; 0x786 <vfprintf+0x31c>
 774:	02 ff       	sbrs	r16, 2
 776:	06 c0       	rjmp	.+12     	; 0x784 <vfprintf+0x31a>
 778:	1e 5f       	subi	r17, 0xFE	; 254
 77a:	05 c0       	rjmp	.+10     	; 0x786 <vfprintf+0x31c>
 77c:	86 78       	andi	r24, 0x86	; 134
 77e:	90 70       	andi	r25, 0x00	; 0
 780:	00 97       	sbiw	r24, 0x00	; 0
 782:	09 f0       	breq	.+2      	; 0x786 <vfprintf+0x31c>
 784:	1f 5f       	subi	r17, 0xFF	; 255
 786:	80 2e       	mov	r8, r16
 788:	99 24       	eor	r9, r9
 78a:	03 fd       	sbrc	r16, 3
 78c:	12 c0       	rjmp	.+36     	; 0x7b2 <vfprintf+0x348>
 78e:	00 ff       	sbrs	r16, 0
 790:	0d c0       	rjmp	.+26     	; 0x7ac <vfprintf+0x342>
 792:	fd 2c       	mov	r15, r13
 794:	1e 15       	cp	r17, r14
 796:	50 f4       	brcc	.+20     	; 0x7ac <vfprintf+0x342>
 798:	fe 0c       	add	r15, r14
 79a:	f1 1a       	sub	r15, r17
 79c:	1e 2d       	mov	r17, r14
 79e:	06 c0       	rjmp	.+12     	; 0x7ac <vfprintf+0x342>
 7a0:	80 e2       	ldi	r24, 0x20	; 32
 7a2:	90 e0       	ldi	r25, 0x00	; 0
 7a4:	b3 01       	movw	r22, r6
 7a6:	0e 94 52 04 	call	0x8a4	; 0x8a4 <fputc>
 7aa:	1f 5f       	subi	r17, 0xFF	; 255
 7ac:	1e 15       	cp	r17, r14
 7ae:	c0 f3       	brcs	.-16     	; 0x7a0 <vfprintf+0x336>
 7b0:	04 c0       	rjmp	.+8      	; 0x7ba <vfprintf+0x350>
 7b2:	1e 15       	cp	r17, r14
 7b4:	10 f4       	brcc	.+4      	; 0x7ba <vfprintf+0x350>
 7b6:	e1 1a       	sub	r14, r17
 7b8:	01 c0       	rjmp	.+2      	; 0x7bc <vfprintf+0x352>
 7ba:	ee 24       	eor	r14, r14
 7bc:	84 fe       	sbrs	r8, 4
 7be:	0f c0       	rjmp	.+30     	; 0x7de <vfprintf+0x374>
 7c0:	80 e3       	ldi	r24, 0x30	; 48
 7c2:	90 e0       	ldi	r25, 0x00	; 0
 7c4:	b3 01       	movw	r22, r6
 7c6:	0e 94 52 04 	call	0x8a4	; 0x8a4 <fputc>
 7ca:	82 fe       	sbrs	r8, 2
 7cc:	1f c0       	rjmp	.+62     	; 0x80c <vfprintf+0x3a2>
 7ce:	81 fe       	sbrs	r8, 1
 7d0:	03 c0       	rjmp	.+6      	; 0x7d8 <vfprintf+0x36e>
 7d2:	88 e5       	ldi	r24, 0x58	; 88
 7d4:	90 e0       	ldi	r25, 0x00	; 0
 7d6:	10 c0       	rjmp	.+32     	; 0x7f8 <vfprintf+0x38e>
 7d8:	88 e7       	ldi	r24, 0x78	; 120
 7da:	90 e0       	ldi	r25, 0x00	; 0
 7dc:	0d c0       	rjmp	.+26     	; 0x7f8 <vfprintf+0x38e>
 7de:	c4 01       	movw	r24, r8
 7e0:	86 78       	andi	r24, 0x86	; 134
 7e2:	90 70       	andi	r25, 0x00	; 0
 7e4:	00 97       	sbiw	r24, 0x00	; 0
 7e6:	91 f0       	breq	.+36     	; 0x80c <vfprintf+0x3a2>
 7e8:	81 fc       	sbrc	r8, 1
 7ea:	02 c0       	rjmp	.+4      	; 0x7f0 <vfprintf+0x386>
 7ec:	80 e2       	ldi	r24, 0x20	; 32
 7ee:	01 c0       	rjmp	.+2      	; 0x7f2 <vfprintf+0x388>
 7f0:	8b e2       	ldi	r24, 0x2B	; 43
 7f2:	07 fd       	sbrc	r16, 7
 7f4:	8d e2       	ldi	r24, 0x2D	; 45
 7f6:	90 e0       	ldi	r25, 0x00	; 0
 7f8:	b3 01       	movw	r22, r6
 7fa:	0e 94 52 04 	call	0x8a4	; 0x8a4 <fputc>
 7fe:	06 c0       	rjmp	.+12     	; 0x80c <vfprintf+0x3a2>
 800:	80 e3       	ldi	r24, 0x30	; 48
 802:	90 e0       	ldi	r25, 0x00	; 0
 804:	b3 01       	movw	r22, r6
 806:	0e 94 52 04 	call	0x8a4	; 0x8a4 <fputc>
 80a:	fa 94       	dec	r15
 80c:	df 14       	cp	r13, r15
 80e:	c0 f3       	brcs	.-16     	; 0x800 <vfprintf+0x396>
 810:	da 94       	dec	r13
 812:	f2 01       	movw	r30, r4
 814:	ed 0d       	add	r30, r13
 816:	f1 1d       	adc	r31, r1
 818:	80 81       	ld	r24, Z
 81a:	90 e0       	ldi	r25, 0x00	; 0
 81c:	b3 01       	movw	r22, r6
 81e:	0e 94 52 04 	call	0x8a4	; 0x8a4 <fputc>
 822:	dd 20       	and	r13, r13
 824:	a9 f7       	brne	.-22     	; 0x810 <vfprintf+0x3a6>
 826:	06 c0       	rjmp	.+12     	; 0x834 <vfprintf+0x3ca>
 828:	80 e2       	ldi	r24, 0x20	; 32
 82a:	90 e0       	ldi	r25, 0x00	; 0
 82c:	b3 01       	movw	r22, r6
 82e:	0e 94 52 04 	call	0x8a4	; 0x8a4 <fputc>
 832:	ea 94       	dec	r14
 834:	ee 20       	and	r14, r14
 836:	c1 f7       	brne	.-16     	; 0x828 <vfprintf+0x3be>
 838:	40 ce       	rjmp	.-896    	; 0x4ba <vfprintf+0x50>
 83a:	f3 01       	movw	r30, r6
 83c:	86 81       	ldd	r24, Z+6	; 0x06
 83e:	97 81       	ldd	r25, Z+7	; 0x07
 840:	02 c0       	rjmp	.+4      	; 0x846 <vfprintf+0x3dc>
 842:	8f ef       	ldi	r24, 0xFF	; 255
 844:	9f ef       	ldi	r25, 0xFF	; 255
 846:	2d 96       	adiw	r28, 0x0d	; 13
 848:	0f b6       	in	r0, 0x3f	; 63
 84a:	f8 94       	cli
 84c:	de bf       	out	0x3e, r29	; 62
 84e:	0f be       	out	0x3f, r0	; 63
 850:	cd bf       	out	0x3d, r28	; 61
 852:	df 91       	pop	r29
 854:	cf 91       	pop	r28
 856:	1f 91       	pop	r17
 858:	0f 91       	pop	r16
 85a:	ff 90       	pop	r15
 85c:	ef 90       	pop	r14
 85e:	df 90       	pop	r13
 860:	cf 90       	pop	r12
 862:	bf 90       	pop	r11
 864:	af 90       	pop	r10
 866:	9f 90       	pop	r9
 868:	8f 90       	pop	r8
 86a:	7f 90       	pop	r7
 86c:	6f 90       	pop	r6
 86e:	5f 90       	pop	r5
 870:	4f 90       	pop	r4
 872:	3f 90       	pop	r3
 874:	2f 90       	pop	r2
 876:	08 95       	ret

00000878 <strnlen_P>:
 878:	fc 01       	movw	r30, r24
 87a:	05 90       	lpm	r0, Z+
 87c:	61 50       	subi	r22, 0x01	; 1
 87e:	70 40       	sbci	r23, 0x00	; 0
 880:	01 10       	cpse	r0, r1
 882:	d8 f7       	brcc	.-10     	; 0x87a <strnlen_P+0x2>
 884:	80 95       	com	r24
 886:	90 95       	com	r25
 888:	8e 0f       	add	r24, r30
 88a:	9f 1f       	adc	r25, r31
 88c:	08 95       	ret

0000088e <strnlen>:
 88e:	fc 01       	movw	r30, r24
 890:	61 50       	subi	r22, 0x01	; 1
 892:	70 40       	sbci	r23, 0x00	; 0
 894:	01 90       	ld	r0, Z+
 896:	01 10       	cpse	r0, r1
 898:	d8 f7       	brcc	.-10     	; 0x890 <strnlen+0x2>
 89a:	80 95       	com	r24
 89c:	90 95       	com	r25
 89e:	8e 0f       	add	r24, r30
 8a0:	9f 1f       	adc	r25, r31
 8a2:	08 95       	ret

000008a4 <fputc>:
 8a4:	0f 93       	push	r16
 8a6:	1f 93       	push	r17
 8a8:	cf 93       	push	r28
 8aa:	df 93       	push	r29
 8ac:	8c 01       	movw	r16, r24
 8ae:	eb 01       	movw	r28, r22
 8b0:	8b 81       	ldd	r24, Y+3	; 0x03
 8b2:	81 ff       	sbrs	r24, 1
 8b4:	1b c0       	rjmp	.+54     	; 0x8ec <fputc+0x48>
 8b6:	82 ff       	sbrs	r24, 2
 8b8:	0d c0       	rjmp	.+26     	; 0x8d4 <fputc+0x30>
 8ba:	2e 81       	ldd	r18, Y+6	; 0x06
 8bc:	3f 81       	ldd	r19, Y+7	; 0x07
 8be:	8c 81       	ldd	r24, Y+4	; 0x04
 8c0:	9d 81       	ldd	r25, Y+5	; 0x05
 8c2:	28 17       	cp	r18, r24
 8c4:	39 07       	cpc	r19, r25
 8c6:	64 f4       	brge	.+24     	; 0x8e0 <fputc+0x3c>
 8c8:	e8 81       	ld	r30, Y
 8ca:	f9 81       	ldd	r31, Y+1	; 0x01
 8cc:	01 93       	st	Z+, r16
 8ce:	f9 83       	std	Y+1, r31	; 0x01
 8d0:	e8 83       	st	Y, r30
 8d2:	06 c0       	rjmp	.+12     	; 0x8e0 <fputc+0x3c>
 8d4:	e8 85       	ldd	r30, Y+8	; 0x08
 8d6:	f9 85       	ldd	r31, Y+9	; 0x09
 8d8:	80 2f       	mov	r24, r16
 8da:	19 95       	eicall
 8dc:	00 97       	sbiw	r24, 0x00	; 0
 8de:	31 f4       	brne	.+12     	; 0x8ec <fputc+0x48>
 8e0:	8e 81       	ldd	r24, Y+6	; 0x06
 8e2:	9f 81       	ldd	r25, Y+7	; 0x07
 8e4:	01 96       	adiw	r24, 0x01	; 1
 8e6:	9f 83       	std	Y+7, r25	; 0x07
 8e8:	8e 83       	std	Y+6, r24	; 0x06
 8ea:	02 c0       	rjmp	.+4      	; 0x8f0 <fputc+0x4c>
 8ec:	0f ef       	ldi	r16, 0xFF	; 255
 8ee:	1f ef       	ldi	r17, 0xFF	; 255
 8f0:	c8 01       	movw	r24, r16
 8f2:	df 91       	pop	r29
 8f4:	cf 91       	pop	r28
 8f6:	1f 91       	pop	r17
 8f8:	0f 91       	pop	r16
 8fa:	08 95       	ret

000008fc <__ultoa_invert>:
 8fc:	fa 01       	movw	r30, r20
 8fe:	aa 27       	eor	r26, r26
 900:	28 30       	cpi	r18, 0x08	; 8
 902:	51 f1       	breq	.+84     	; 0x958 <__ultoa_invert+0x5c>
 904:	20 31       	cpi	r18, 0x10	; 16
 906:	81 f1       	breq	.+96     	; 0x968 <__ultoa_invert+0x6c>
 908:	e8 94       	clt
 90a:	6f 93       	push	r22
 90c:	6e 7f       	andi	r22, 0xFE	; 254
 90e:	6e 5f       	subi	r22, 0xFE	; 254
 910:	7f 4f       	sbci	r23, 0xFF	; 255
 912:	8f 4f       	sbci	r24, 0xFF	; 255
 914:	9f 4f       	sbci	r25, 0xFF	; 255
 916:	af 4f       	sbci	r26, 0xFF	; 255
 918:	b1 e0       	ldi	r27, 0x01	; 1
 91a:	3e d0       	rcall	.+124    	; 0x998 <__ultoa_invert+0x9c>
 91c:	b4 e0       	ldi	r27, 0x04	; 4
 91e:	3c d0       	rcall	.+120    	; 0x998 <__ultoa_invert+0x9c>
 920:	67 0f       	add	r22, r23
 922:	78 1f       	adc	r23, r24
 924:	89 1f       	adc	r24, r25
 926:	9a 1f       	adc	r25, r26
 928:	a1 1d       	adc	r26, r1
 92a:	68 0f       	add	r22, r24
 92c:	79 1f       	adc	r23, r25
 92e:	8a 1f       	adc	r24, r26
 930:	91 1d       	adc	r25, r1
 932:	a1 1d       	adc	r26, r1
 934:	6a 0f       	add	r22, r26
 936:	71 1d       	adc	r23, r1
 938:	81 1d       	adc	r24, r1
 93a:	91 1d       	adc	r25, r1
 93c:	a1 1d       	adc	r26, r1
 93e:	20 d0       	rcall	.+64     	; 0x980 <__ultoa_invert+0x84>
 940:	09 f4       	brne	.+2      	; 0x944 <__ultoa_invert+0x48>
 942:	68 94       	set
 944:	3f 91       	pop	r19
 946:	2a e0       	ldi	r18, 0x0A	; 10
 948:	26 9f       	mul	r18, r22
 94a:	11 24       	eor	r1, r1
 94c:	30 19       	sub	r19, r0
 94e:	30 5d       	subi	r19, 0xD0	; 208
 950:	31 93       	st	Z+, r19
 952:	de f6       	brtc	.-74     	; 0x90a <__ultoa_invert+0xe>
 954:	cf 01       	movw	r24, r30
 956:	08 95       	ret
 958:	46 2f       	mov	r20, r22
 95a:	47 70       	andi	r20, 0x07	; 7
 95c:	40 5d       	subi	r20, 0xD0	; 208
 95e:	41 93       	st	Z+, r20
 960:	b3 e0       	ldi	r27, 0x03	; 3
 962:	0f d0       	rcall	.+30     	; 0x982 <__ultoa_invert+0x86>
 964:	c9 f7       	brne	.-14     	; 0x958 <__ultoa_invert+0x5c>
 966:	f6 cf       	rjmp	.-20     	; 0x954 <__ultoa_invert+0x58>
 968:	46 2f       	mov	r20, r22
 96a:	4f 70       	andi	r20, 0x0F	; 15
 96c:	40 5d       	subi	r20, 0xD0	; 208
 96e:	4a 33       	cpi	r20, 0x3A	; 58
 970:	18 f0       	brcs	.+6      	; 0x978 <__ultoa_invert+0x7c>
 972:	49 5d       	subi	r20, 0xD9	; 217
 974:	31 fd       	sbrc	r19, 1
 976:	40 52       	subi	r20, 0x20	; 32
 978:	41 93       	st	Z+, r20
 97a:	02 d0       	rcall	.+4      	; 0x980 <__ultoa_invert+0x84>
 97c:	a9 f7       	brne	.-22     	; 0x968 <__ultoa_invert+0x6c>
 97e:	ea cf       	rjmp	.-44     	; 0x954 <__ultoa_invert+0x58>
 980:	b4 e0       	ldi	r27, 0x04	; 4
 982:	a6 95       	lsr	r26
 984:	97 95       	ror	r25
 986:	87 95       	ror	r24
 988:	77 95       	ror	r23
 98a:	67 95       	ror	r22
 98c:	ba 95       	dec	r27
 98e:	c9 f7       	brne	.-14     	; 0x982 <__ultoa_invert+0x86>
 990:	00 97       	sbiw	r24, 0x00	; 0
 992:	61 05       	cpc	r22, r1
 994:	71 05       	cpc	r23, r1
 996:	08 95       	ret
 998:	9b 01       	movw	r18, r22
 99a:	ac 01       	movw	r20, r24
 99c:	0a 2e       	mov	r0, r26
 99e:	06 94       	lsr	r0
 9a0:	57 95       	ror	r21
 9a2:	47 95       	ror	r20
 9a4:	37 95       	ror	r19
 9a6:	27 95       	ror	r18
 9a8:	ba 95       	dec	r27
 9aa:	c9 f7       	brne	.-14     	; 0x99e <__ultoa_invert+0xa2>
 9ac:	62 0f       	add	r22, r18
 9ae:	73 1f       	adc	r23, r19
 9b0:	84 1f       	adc	r24, r20
 9b2:	95 1f       	adc	r25, r21
 9b4:	a0 1d       	adc	r26, r0
 9b6:	08 95       	ret

000009b8 <_exit>:
 9b8:	f8 94       	cli

000009ba <__stop_program>:
 9ba:	ff cf       	rjmp	.-2      	; 0x9ba <__stop_program>
